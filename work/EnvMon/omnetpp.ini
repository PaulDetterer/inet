[Config Ieee802154]
network = EnvMonNet
seed-set = 0

**.arp.typename = "GlobalArp"
*.node{1..}.forwarding = true
**.netmaskRoutes = ""



*.radioMedium.backgroundNoise.power = -110dBm
*.radioMedium.pathLoss.typename = "LogNormalShadowing"
*.radioMedium.pathLoss.alpha = 2.2
#*.configurator.addStaticRoutes = false


# app configuration

*.node0.numApps = 1
*.node0.app[*].typename = "UdpSink"
*.node0.app[*].localPort = 1000

*.node{1..}.numApps = 1
*.node{1..}.app[*].typename = "UdpBasicApp"
*.node{1..}.app[*].destAddresses = "node0"
*.node{1..}.app[*].destPort = 1000
*.node{1..}.app[*].sendInterval = 15*60 s
*.node{1..}.app[*].startTime = uniform(0s,15*60s)
*.node{1..}.app[*].messageLength = 20Byte # TODO APPROPRIATE???
*.node{1..}.app[*].packetName = "SensorData"





# routing table visualization
*.visualizer.*.routingTableVisualizer[0].displayRoutingTables = false
*.visualizer.*.routingTableVisualizer[0].displayRoutesIndividually = false
*.visualizer.*.routingTableVisualizer[0].lineShift = 0
*.visualizer.*.routingTableVisualizer[0].displayLabels = false

# interface table visualization
*.visualizer.*.interfaceTableVisualizer[0].displayInterfaceTables = false

# communication range
**.wlan[0].radio.transmitter.displayCommunicationRange = true

# data link visualization
#*.visualizer.*.numDataLinkVisualizers = 1
#*.visualizer.*.dataLinkVisualizer[*].displayLinks = true
#*.visualizer.*.dataLinkVisualizer[0].nodeFilter = "node*"
#*.visualizer.*.dataLinkVisualizer[1].*Color = "blue"
#*.visualizer.*.dataLinkVisualizer[1].nodeFilter = "lamp* or controller"

# statistic visualization
#*.visualizer.*.numStatisticVisualizers = 2
#*.visualizer.*.statisticVisualizer[*].zIndex = 1
#
#*.visualizer.*.statisticVisualizer[0].displayStatistics = true
#*.visualizer.*.statisticVisualizer[0].signalName = "packetSent"
#*.visualizer.*.statisticVisualizer[0].statisticExpression = "count"
#*.visualizer.*.statisticVisualizer[0].sourceFilter = "**.controller.udp **.sensor*.udp"
#*.visualizer.*.statisticVisualizer[0].format = "sent: %v pks"
#
#*.visualizer.*.statisticVisualizer[1].displayStatistics = true
#*.visualizer.*.statisticVisualizer[1].signalName = "packetReceived"
#*.visualizer.*.statisticVisualizer[1].statisticExpression = "count"
#*.visualizer.*.statisticVisualizer[1].sourceFilter = "**.controller.udp **.lamp*.udp"
#*.visualizer.*.statisticVisualizer[1].format = "rcvd: %v pks"

[Config Ieee802154Power]
extends = Ieee802154


**.wlan[0].radio.transmitter.power  = ${Ptx=0,-10}dBm
**.wlan[0].radio.receiver.sensitivity  = ${Rsens=-95,-85}dBm

**.wlan[0].radio.energyConsumer.sleepPowerConsumption = 2.7*1 mW
**.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2.7*${19.1, 12.1 ! Rsens} mW
**.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 2.7*${21.1, 13.3 ! Rsens} mW
**.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 2.7*${21.1, 13.3 ! Rsens} mW
**.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 1 mW
# Transmitting power from the table
# Assumption the difference between measured and datasheet is liniar without constant shift
# For -5 dBm Itx = 11 mA * 22/19.7  
**.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 2.7*${Ptxdc=22,13.9 ! Ptx} mW

constraint = (($Rsens) < -85) || (($Ptx) > -10) 

*.configurator.addStaticRoutes = false
*.configurator.config = xmldoc("routing_Ptx${Ptx}_Rsens${Rsens}.xml")
#*.configurator.config = xmldoc("multyhoptopology.xml")

sim-time-limit = 100*15*60s

[Config DumpRoutes]
extends = Ieee802154Power
*.radioMedium.pathLoss.typename = "FreeSpacePathLoss"
*.radioMedium.pathLoss.alpha = 2.2
**.wlan[0].radio.transmitter.power  = ${ -0.5,-11 ! Ptx} dBm
*.configurator.config = xmldoc("multyhoptopology.xml")
*.configurator.addStaticRoutes = true
*.configurator.dumpConfig = "routing_Ptx${Ptx}_Rsens${Rsens}.xml"

# *.configurator.dumpLinks = true
# *.configurator.dumpAddresses = true
# *.configurator.dumpRoutes = true
# *.configurator.dumpToplology = true
sim-time-limit = 1ns
cmdenv-express-mode = false

